set(TARGET client)
set(PLATFORM "")
set(HEADER_FILES Scene.h Shader.h glheader.h)
set(SOURCE_FILES Scene.cpp Shader.cpp)
set(RESOURCE_FILES)
set(THIRD_DEPENDS)
set(INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/dependencies/glew-2.1.0/include)
set(THIRD_DEPEND_DIRS)
set(THIRD_DEPEND_BINS)
if(PLATFORM_IOS)
  message("todo")

elseif(PLATFORM_WINDOWS)
  set(PLATFORM WIN32)
  set(CMAKE_BUILD_TYPE Debug)
  list(APPEND HEADER_FILES windows/client.h windows/framework.h
       windows/Resource.h windows/targetver.h)
  list(APPEND SOURCE_FILES windows/client.cpp)
  list(APPEND RESOURCE_FILES windows/client.rc windows/client.ico
       windows/small.ico)
  list(APPEND THIRD_DEPENDS opengl32.lib glu32.lib glew32.lib)
  list(APPEND THIRD_DEPEND_DIRS ${CMAKE_SOURCE_DIR}/dependencies/glew-2.1.0/lib/Release/x64)
  list(APPEND THIRD_DEPEND_BINS ${PROJECT_SOURCE_DIR}/dependencies/glew-2.1.0/bin/Release/x64/)
elseif(PLATFORM_OSX)
  set(PLATFORM MACOSX_BUNDLE)
endif()

include_directories(${INCLUDE_DIRS})
link_directories(${THIRD_DEPEND_DIRS})

source_group("Resources" FILES ${RESOURCE_FILES})
add_executable(${TARGET} ${PLATFORM} ${HEADER_FILES} ${SOURCE_FILES})
target_link_libraries(${TARGET} ${THIRD_DEPENDS})
add_custom_command(TARGET ${TARGET} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${THIRD_DEPEND_BINS} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_BUILD_TYPE})
