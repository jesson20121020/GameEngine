# vim: set fenc=utf-8 ft=dosini:

# define a new task named "file-build"
[cmake-mac]

# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command=cmake ../../ -G  "Xcode"

# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_ROOT)/build/mac

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=1

# define a new task named "file-build"
[xcode-mac]

# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command=open GameEngine.xcodeproj

# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_ROOT)/build/mac

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=1

# define a new task named "file-build"
[cmake-ios]

# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command=cmake ../../ -D CMAKE_SYSTEM_NAME=iOS -G  "Xcode"

# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_ROOT)/build/ios

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=1

# define a new task named "file-build"
[xcode-ios]

# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command=open GameEngine.xcodeproj

# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_ROOT)/build/ios

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=1


